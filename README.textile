
*Flo's Open libRary*

This is a C++ core library that is used in several of my projects:
* "oclraster":https://github.com/a2flo/oclraster
* "a2elight":https://github.com/a2flo/a2elight
* "unibot":https://github.com/a2flo/unibot

*Requirements:*
* Windows: NT 6.0+ x86 (Vista/7/8/2008/2008R2/2012/2012R2)
* OS X: 10.7+
* iOS: 7.0+ (armv7/armv7s/arm64)
* Linux: any x64 distribution that supports the AMD, Intel or Nvidia OpenCL SDK/drivers
* FreeBSD: 10.0+ (amd64; i386 support is uncertain)
* OpenBSD: as soon as libc++ is supported

*Build Instructions:*
* after cloning: git submodule init && git submodule update
* after a submodule update / pull: git submodule update
* ./build.sh (use "./build.sh help" to get a list of all options)

on Linux and FreeBSD:
* install all necessary libraries and programs, including clang 3.5+ and libc++ (currently 1101) (-> Credits)
** on "Arch Linux":https://www.archlinux.org (sub-dependencies are installed automatically): pacman -S clang libc++ sdl2 sdl2_image libxml2 freetype2 boost opencl-headers cuda
** any of: opencl-nvidia (in addition to Nvidia drivers), intel-opencl-sdk (from AUR, CPU only or in addition to Intel GPU drivers) or "catalyst":https://wiki.archlinux.org/index.php/AMD_Catalyst + "misc":https://wiki.archlinux.org/index.php/AMD_Catalyst#OpenCL_and_OpenGL_development
* run ./build.sh or "./build.sh pocl" on FreeBSD
* make
* there is an install script located in the top folder which should be executed from that folder (will install to /usr/local/)
* alternatively:
** sudo ln -sf /path/to/floor/bin/libfloor{,d}.{a,so} /usr/local/lib/
** sudo ln -sf /path/to/floor /usr/local/include/floor
* when using X11 forwarding, set these env variables:
** export LIBGL_ALWAYS_INDIRECT=yes
** export SDL_VIDEO_X11_NODIRECTCOLOR=yes

on Windows/MinGW:
* install custom MinGW builds (with clang 3.5+ and libc++)
* install "MSYS":http://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/MSYS%20%2832-bit%29/ to your MinGW folder
* build/install all necessary libraries, including libc++ (-> Credits)
* add a Windows system environment variable called "MINGW_ROOT" and set it to your MinGW root folder (e.g. "/c/mingw/mingw32/")
* add the "mingw/bin" path to the Windows system environment variable called "PATH"
* run "./build.sh"
* make
* libraries and headers will be automatically installed to your previously set MinGW folder
* note: to make things easier, I might provide a full MinGW package containing all required libraries at a later point

on OS X:
* install Xcode 6.1+, Xquartz, SDL2, SDL2_image, CUDA (optionally) and boost (copying headers to /usr/local/include or /usr/include suffices)
* if you haven't installed the Xcode command line tools yet, run: ==xcode-select --install==
* install "homebrew":http://brew.sh: ==ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"==
* install openssl 1.0.1e+ (OS X only provides 0.9.8 - this is w/o TLS 1.1/1.2 support!): brew install openssl
* add this to your ~/.profile file: export DYLD_LIBRARY_PATH=/usr/local/opt/openssl/lib:${DYLD_LIBRARY_PATH}
* compile floor.xcodeproj (floor target) or run ./build.sh
* install/symlink floor .dylib and include folder:
** if /usr/local or any sub-folders do not exist, create them (sudo mkdir -p /usr/local/{include,lib})
** sudo ln -sf /path/to/floor/bin/libfloor{,d}.dylib /usr/local/lib/
** sudo ln -sf /path/to/floor /usr/local/include/floor

on iOS:
* install Xcode 6.1+
* compile static libs for SDL2 (2.0.2+), SDL2_image and OpenSSL (1.0.1e+), then symlink or copy them into your iPhoneOS and iPhoneSimulator /usr/{lib,include} folders
* symlink or copy boost header folder to your iPhoneOS and iPhoneSimulator /usr/include/ folder
* symlink the OpenCL.framework/Headers folder of your OS X SDK to the iPhoneOS SDKs PrivateFrameworks/OpenCL.framework/ folder
* compile floor.xcodeproj (floor_ios target)
* install/symlink floor .a and lib folder:
** sudo ln -sf /path/to/floor/bin/libfloor{,d}.a {iPhoneOS/iPhoneSimulator folders}/usr/lib/
** sudo ln -sf /path/to/floor {iPhoneOS/iPhoneSimulator folders}/usr/include/floor
* linker flags for a depending project: -lSDL2 -lSDL2_image -lfloor -lcrypto -lssl

*Optional:*
In the future, there will be more configuration options (defines) that can disable certain parts of floor that aren't wanted or needed (e.g. networking).
Right now, only CUDA, OpenCL and OpenAL can be disabled:
* to disable CUDA: define "FLOOR_NO_CUDA_CL"
* to disable OpenCL: define "FLOOR_NO_OPENCL"
* to disable OpenAL: define "FLOOR_NO_OPENAL"

*Credits:*
* http://www.libsdl.org / SDL2 and SDL2_image
* http://www.libpng.org / libpng
* http://www.xmlsoft.org / libxml2
* http://mingw-w64.sourceforge.net / MinGW-w64/MSYS environment
* http://www.freetype.org / FreeType2
* http://www.dejavu-fonts.org / Bitstream DejaVu Fonts
* http://clang.llvm.org / clang
* http://libcxx.llvm.org / libc++
* Khronos (http://www.khronos.org) / Nvidia / AMD / Apple / Intel (OpenGL/OpenCL)
* http://www.nvidia.com / CUDA (optional library)
* http://pocl.sourceforge.net / pocl (optional library)
* http://www.boost.org / boost
* https://code.google.com/p/cityhash / CityHash
* http://bellard.org/tcc / Tiny C Compiler
* http://xquartz.macosforge.org/landing / XQuartz
* http://brew.sh / Homebrew
