
*Flo's Open libRary*

*Requirements:*
* OS:
** Windows: NT 6.0+ (lib is x86/32-bit only here)
** OS X: 10.9+ (lib is x64/64-bit only here)
** iOS: 7.0+ (32-bit armv7/armv7s or 64-bit arm64/aarch64)
** Linux: any current x64 distribution
** FreeBSD: 10.0+ (lib is x64/64-bit only here)
** other Unix: if x64 and other requirements are met
* compiler/toolchain:
** Generic: "Clang":http://clang.llvm.org / "LLVM":http://llvm.org / "libc++":http://libcxx.llvm.org 3.5+
** OS X/iOS: "Xcode":https://developer.apple.com/xcode/downloads 6.3+
** Windows (VS): "Clang / LLVM for Windows":http://llvm.org/builds 3.7+ / "VS2015":https://www.visualstudio.com/downloads/visual-studio-2015-ctp-vs
** Windows (MinGW): "MSYS2":http://sourceforge.net/projects/msys2 with Clang/LLVM/libc++ 3.5+
* libraries and optional requirements:
** "SDL2":http://www.libsdl.org 2.0.2+ ("2.0.4+":https://buildbot.libsdl.org/sdl-builds/sdl-visualstudio/?C=M;O=D on Windows)
** "libxml2":https://www.xmlsoft.org (probably with iconv)
** "OpenGL 4.1+ Core headers":https://www.opengl.org/registry/#headers
** (opt) OpenCL: requires OpenCL 1.2+ SDK and CPU/GPU drivers ("Intel":https://software.intel.com/en-us/intel-opencl, "AMD":http://developer.amd.com/tools-and-sdks/opencl-zone/amd-accelerated-parallel-processing-app-sdk)
** (opt) CUDA: requires "CUDA 6.5+ SDK":https://developer.nvidia.com/cuda-downloads and sm_20+/Fermi+ GPU
** (opt) Metal: requires iOS 8.0+ and A7+ CPU/GPU
** (opt) networking: requires "boost":https://www.boost.org 1.54+ headers and "OpenSSL":https://www.openssl.org 1.0.1+
** (opt) audio/OpenAL: requires "OpenAL Soft":http://kcat.strangesoft.net/openal.html

*Build Instructions:*
* run ./build.sh (use "./build.sh help" to get a list of all options)
* configuration of optional parts:
** to disable OpenCL: define "FLOOR_NO_OPENCL" or "./build.sh no-opencl"
** to disable CUDA: define "FLOOR_NO_CUDA" or "./build.sh no-cuda"
** to disable Metal (only affects iOS builds): define "FLOOR_NO_METAL" or "./build.sh no-metal"
** to disable network support (ssl/crypto/boost-asio): define "FLOOR_NO_NET" or "./build.sh no-net"
** to disable OpenAL: define "FLOOR_NO_OPENAL" or "./build.sh no-openal"
** to disable language support (lexer/parser): define "FLOOR_NO_LANG" or "./build.sh no-lang"
** to disable C++ exceptions (implies no-net no-lang): define "FLOOR_NO_EXCEPTIONS" -> "./build.sh no-exceptions"

*Build Instructions (Xcode / OS X / iOS):*
* open floor.xcodeproj and build
* some notes:
** all optional parts of floor are enabled here and you'll have to install all dependencies or disable them manually
** "homebrew":http://brew.sh is the recommended way to install additional dependencies: ==ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"==
** command line tools might be necessary, install them with: ==xcode-select --install==
** on iOS, either copy dependencies into your iPhoneOS and iPhoneSimulator SDK, or floor/ios/deps/{include,lib}
** iOS linker flags for a depending project: -lSDL2 -lfloor -lcrypto -lssl

*Build Instructions (Visual Studio / Windows):*
* open floor.sln and build (lib and include paths might need to be modified)
* some notes:
** as mentionend in the requirements, "Clang/LLVM":http://llvm.org/builds must be installed
** "SDL2":https://buildbot.libsdl.org/sdl-builds/sdl-visualstudio/?C=M;O=D and "libxml2+iconv":http://www.zlatkovic.com/libxml.en.html are required dependencies
** either the AMD or Intel OpenCL SDK must be installed
** the CUDA SDK must be installed
** it is necessary to add the parent directory of where floor is located to the include paths
** networking (boost/openssl), audio (openal) and use of exceptions are disabled by default (and not supported)

*Installation (Unix):*
* sudo ln -sf /path/to/floor/bin/libfloor{,d}.{a,so,dylib} /usr/lib/
* sudo ln -sf /path/to/floor /usr/include/floor
* alternatively: copy these files/folders there

*Installation (Windows):*
* copy floor.lib/floord.lib to your libraries folder or directly link it
* add the parent directory of where floor is located to the include paths (e.g. C:/some_path/ if floor is located in C:/some_path/floor)
** when using compute, also set an environment variable named FLOOR_INCLUDE with this path

*Misc Hints:*
* when using X11 forwarding, set these env variables:
** export LIBGL_ALWAYS_INDIRECT=yes
** export SDL_VIDEO_X11_NODIRECTCOLOR=yes
* depending on how your Linux distribution handles OpenCL headers and library, you might need to manually install OpenCL 1.2+ compatible ones
* the CUDA SDK might provide conflicting OpenCL 1.1 headers and library, simply remove them if this happens (although this is usally taking care of by having the CUDA SDK path last)
* on Windows: a nvcuda.dll must always be present on the system when CUDA support is enabled

*Compute Toolchain:*
* compile the toolchain (this requires a Unix environment with all LLVM build dependencies installed - use MSYS2 on Windows):
** cd floor/etc/llvm35/ && ./build.sh
** if successful, package it (in addition to a .zip file, this also creates a folder with all necessary binaries and include files): ./pkg.sh
* install the toolchain:
** add "floor/etc/llvm35/compute_clang_*_*/" to your PATH environment variable, or set fixed/absolute binary paths in config.xml
** "floor/etc/llvm35/compute_clang_*_*/libcxx/include" and "floor/etc/llvm35/compute_clang_*_*/clang" must be set in your config.xml (provided by a project using floor)
** as mentioned in "Installation (Windows)", FLOOR_INCLUDE must be set correctly

*Projects and Examples using floor*:
* "floor_examples":https://github.com/a2flo/floor_examples
* "oclraster":https://github.com/a2flo/oclraster
* "a2elight":https://github.com/a2flo/a2elight
* "unibot":https://github.com/a2flo/unibot
